<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pl.ms.design-patterns</groupId>
    <artifactId>design-patterns</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>design-patterns</name>

    <developers>
        <developer>
            <id>slezionam</id>
            <name>Marcin Sleziona</name>
            <email>marcin.sleziona@gmail.com</email>
        </developer>
    </developers>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <spring-cloud.version>Dalston.RC1</spring-cloud.version>

        <compiler.java>1.8</compiler.java>
        <compiler.encoding>UTF-8</compiler.encoding>

        <!-- maven plugins -->
        <external.atlassian.jgitflow.jgitflow-maven-plugin>1.0-m5.1</external.atlassian.jgitflow.jgitflow-maven-plugin>
        <com.spotify.docker-maven-plugin>0.4.13</com.spotify.docker-maven-plugin>
        <org.apache.maven.plugins-maven-compiler-plugin>3.3</org.apache.maven.plugins-maven-compiler-plugin>
        <org.apache.maven.plugins-maven-deploy-plugin>2.5</org.apache.maven.plugins-maven-deploy-plugin>
        <org.apache.maven.plugins-maven-install-plugin>2.3.1</org.apache.maven.plugins-maven-install-plugin>
        <org.apache.maven.plugins-maven-jar-plugin>2.6</org.apache.maven.plugins-maven-jar-plugin>
        <org.apache.maven.plugins-maven-release-plugin>2.4.1</org.apache.maven.plugins-maven-release-plugin>
        <org.apache.maven.plugins-maven-resources-plugin>2.5</org.apache.maven.plugins-maven-resources-plugin>
        <org.apache.maven.plugins-maven-source-plugin>2.4</org.apache.maven.plugins-maven-source-plugin>
        <org.apache.maven.plugins-maven-war-plugin>2.2</org.apache.maven.plugins-maven-war-plugin>
        <org.apache.tomcat.maven.tomcat7-maven-plugin>2.2</org.apache.tomcat.maven.tomcat7-maven-plugin>
        <org.codehaus.mojo-buildnumber-maven-plugin>1.1</org.codehaus.mojo-buildnumber-maven-plugin>
        <org.codehaus.mojo-findbugs-maven-plugin>2.5.2</org.codehaus.mojo-findbugs-maven-plugin>
        <org.codehaus.mojo-sonar-maven-plugin>1.0</org.codehaus.mojo-sonar-maven-plugin>
        <org.jacoco-jacoco-maven-plugin>0.7.4.201502262128</org.jacoco-jacoco-maven-plugin>

        <version.assertj>3.6.2</version.assertj>
        <version-cache-api>1.0.0</version-cache-api>
        <version.commons-collections4>4.1</version.commons-collections4>
        <version.commons-dbcp>1.4</version.commons-dbcp>
        <version.commons-lang3>3.5</version.commons-lang3>
        <version-ehcache>3.2.0</version-ehcache>
        <version-h2database>1.4.195</version-h2database>
        <version.hibernate-core>5.2.5.Final</version.hibernate-core>
        <version.usertype.core>6.0.1.GA</version.usertype.core>
        <version.janino>3.0.7</version.janino>
        <version.javamelody-core>1.62.0</version.javamelody-core>
        <version.jmockit>0.999.4</version.jmockit>
        <version.joda-time>2.1</version.joda-time>
        <version.jolokia-core>1.3.5</version.jolokia-core>
        <version.junitparams>1.0.5</version.junitparams>
        <version.liquibase>3.5.3</version.liquibase>
        <version.mockito>1.10.19</version.mockito>
        <version.policy>2.4</version.policy>
        <version.slf4j>1.7.21</version.slf4j>
        <version.spring.security>4.0.4.RELEASE</version.spring.security>
        <version.springfox-swagger2>2.6.1</version.springfox-swagger2>
    </properties>


    <build>
        <finalName>design-patterns</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.css</include>
                    <include>**/*.csv</include>
                    <include>**/*.ftl</include>
                    <include>**/*.gif</include>
                    <include>**/*.html</include>
                    <include>**/*.js</include>
                    <include>**/*.png</include>
                    <include>**/*.properties</include>
                    <include>**/*.txt</include>
                    <include>**/*.xml</include>
                    <include>**/*.xsd</include>
                    <include>**/*.yml</include>
                    <include>**/*.wsdl</include>
                    <include>**/*.zul</include>
                    <include>**/Dockerfile</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${external.atlassian.jgitflow.jgitflow-maven-plugin}</version>
                <configuration>
                    <allowUntracked>true</allowUntracked>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <noDeploy>true</noDeploy>
                    <pushReleases>true</pushReleases>
                    <pushHotfixes>true</pushHotfixes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${com.spotify.docker-maven-plugin}</version>
                <configuration>
                    <imageName>rma</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.war</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-compiler-plugin}</version>
                <configuration>
                    <source>${compiler.java}</source>
                    <target>${compiler.java}</target>
                    <encoding>${compiler.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-deploy-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-install-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-jar-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-release-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-resources-plugin}</version>
                <configuration>
                    <encoding>${compiler.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-source-plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${org.apache.maven.plugins-maven-war-plugin}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>buildnumber-maven-plugin</artifactId>-->
<!--                <version>${org.codehaus.mojo-buildnumber-maven-plugin}</version>-->
<!--                <configuration>-->
<!--                    <doCheck>false</doCheck>-->
<!--                    <doUpdate>false</doUpdate>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>create</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>findbugs-maven-plugin</artifactId>-->
<!--                <version>${org.codehaus.mojo-findbugs-maven-plugin}</version>-->
<!--                <configuration>-->
<!--                    <findbugsXmlOutput>true</findbugsXmlOutput>-->
<!--                    <xmlOutput>true</xmlOutput>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>sonar-maven-plugin</artifactId>-->
<!--                <version>${org.codehaus.mojo-sonar-maven-plugin}</version>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${org.jacoco-jacoco-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <modules>
        <module>behavior-cor</module>
        <module>behavior-observer</module>
        <module>structural-adapter</module>
        <module>structural-bridge</module>
        <module>structural-composite</module>
        <module>structural-decorator</module>
        <module>structural-facade</module>
        <module>structural-flyweight</module>
        <module>structural-proxy</module>
    </modules>

<!--    <dependencyManagement>-->
<!--        <dependencies>-->

<!--            <dependency>-->
<!--                <groupId>org.springframework.cloud</groupId>-->
<!--                <artifactId>spring-cloud-dependencies</artifactId>-->
<!--                <version>${spring-cloud.version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->
<!--        </dependencies>-->
<!--    </dependencyManagement>-->

    <dependencies>

        <!-- spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator-docs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-el</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- databases -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version-h2database}</version>
        </dependency>

        <!-- hibernate -->
        <!-- jadira is not compatible with the hibernate that is coming from spring boot -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate-core}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.el</groupId>
                    <artifactId>el-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${version.hibernate-core}</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-core</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>mockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${version.jmockit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${version.junitparams}</version>
            <scope>test</scope>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${version.springfox-swagger2}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${version.springfox-swagger2}</version>
        </dependency>

        <!-- cache -->
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${version-ehcache}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${version-cache-api}</version>
        </dependency>

        <!-- commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${version.commons-collections4}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${version.commons-dbcp}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.commons-lang3}</version>
        </dependency>

        <!-- javamelody -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>${version.javamelody-core}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${version.joda-time}</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${version.usertype.core}</version>
        </dependency>


        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <version>${version.jolokia-core}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${version.janino}</version>
        </dependency>

    </dependencies>

</project>
